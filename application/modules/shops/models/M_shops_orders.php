<?phpclass M_shops_orders extends CI_Model {    public $_table_name = 'shops_order';    public function __construst() {        parent::__construst();    }    private function generate_where($args) {        if (isset($args['q'])) {            $this->db->group_start();            $this->db->like($this->_table_name . ".order_code", $args['q']);            $this->db->or_like($this->_table_name . ".order_ship_full_name", $args['q']);            $this->db->or_like($this->_table_name . ".order_email", $args['q']);            $this->db->or_like($this->_table_name . ".order_phone", $args['q']);            $this->db->group_end();        }        if (isset($args['order_viewed'])) {            $this->db->where($this->_table_name . ".order_viewed", $args['order_viewed']);        }        if (isset($args['customer_id'])) {            $this->db->where($this->_table_name . ".order_customer_id", $args['customer_id']);        }        if (isset($args['in_customer_id'])) {            $this->db->where_in($this->_table_name . ".order_customer_id", $args['in_customer_id']);        }        /*if (isset($args['start_date_start'])) {            $this->db->where($this->_table_name . ".created >=", $args['start_date_start']);        }        if (isset($args['start_date_end'])) {            $this->db->where($this->_table_name . ".created <=", $args['start_date_end']);        }*/        if (isset($args['start_date_start']) && isset($args['start_date_end'])) {            $this->db->group_start();            $this->db->where($this->_table_name . ".order_date >=", $args['start_date_start']);            $this->db->where($this->_table_name . ".order_date <=", $args['start_date_end']);            $this->db->group_end();        }elseif(isset($args['start_date_start'])){            $this->db->where($this->_table_name . ".order_date >=", $args['start_date_start']);        }elseif(isset($args['start_date_end'])){            $this->db->where($this->_table_name . ".order_date <=", $args['start_date_end']);        }        if (isset($args['transaction_status'])) {            $this->db->where($this->_table_name . ".transaction_status", $args['transaction_status']);        }    }    private function generate_group_by($args) {        if (isset($args['group_by']) && is_array($args['group_by']) && !empty($args['group_by'])) {            foreach ($args['group_by'] as $value) {                $this->db->group_by($value);            }        }    }    private function generate_order_by($args) {        $allow_sort = array("DESC", "ASC", "RANDOM");        if (isset($args['order_by']) && is_array($args['order_by']) && !empty($args['order_by'])) {            foreach ($args['order_by'] as $key => $value) {                $sort = in_array($value, $allow_sort) ? $value : "DESC";                $this->db->order_by($key, $sort);            }        }    }    public function gets($args, $perpage = 5, $offset = -1) {        $this->db->select($this->_table_name . '.*, ctms.full_name, ctms.username, ctms.address');        $this->db->from($this->_table_name);        $this->db->join('users AS ctms', $this->_table_name . '.order_customer_id = ctms.userid', 'left');        $this->generate_where($args);        $this->generate_order_by($args);        $this->generate_group_by($args);        if ($offset >= 0) {            $this->db->limit($perpage, $offset);        }        $query = $this->db->get();        //echo $this->db->last_query();        return $query->result_array();    }    public function counts($args) {        $this->db->select($this->_table_name . '.order_id');        $this->db->from($this->_table_name);        $this->db->join('users AS ctms', $this->_table_name . '.order_customer_id = ctms.userid', 'left');        $this->generate_where($args);        $this->generate_order_by($args);        $this->generate_group_by($args);        $query = $this->db->get();        return $query->num_rows();    }    public function get($order_id) {        $this->db->select($this->_table_name . '.*, ctms.full_name, ctms.username, ctms.address');        $this->db->from($this->_table_name);        $this->db->join('users AS ctms', $this->_table_name . '.order_customer_id = ctms.userid', 'left');        $this->db->where($this->_table_name . '.order_id', $order_id);        $query = $this->db->get();        return $query->row_array();    }    function get_by_short($args = array()) {        if (empty($args)) {            return false;        }        // $this->db->select('order_id, order_customer_id, transaction_status, order_date, created');        $this->db->select('order_date');        $this->db->from($this->_table_name);        $this->generate_where($args);        $this->generate_order_by($args);        $query = $this->db->get();        //echo $this->db->last_query();        return $query->row_array();    }    function check_order_code_availablity($order_code) {        if (trim($order_code) == '') {            return FALSE;        }        $this->db->select();        $this->db->where('order_code', $order_code);        $this->db->from($this->_table_name);        $query = $this->db->get();        if ($query->num_rows() > 0) {            return FALSE;        } else {            return TRUE;        }    }    public function add($args = array()) {        if (empty($args)) {            return 0;        }        $query = $this->db->insert($this->_table_name, $args);        $insert_id = $this->db->insert_id();        return (isset($query)) ? $insert_id : 0;    }    public function update($order_id, $args) {        if (empty($args)) {            return false;        }        $this->db->where('order_id', $order_id);        $query = $this->db->update($this->_table_name, $args);        return (isset($query)) ? true : false;    }    public function delete($order_id) {        $this->db->where('order_id', $order_id);        $query = $this->db->delete($this->_table_name);        return (isset($query)) ? true : false;    }}/* End of file m_shops_orders.php *//* Location: ./application/modules/shops/models/m_shops_orders.php */